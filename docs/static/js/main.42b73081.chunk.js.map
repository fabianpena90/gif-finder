{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","value","setValue","onSubmit","e","preventDefault","trim","length","cats","alert","onChange","target","type","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GiftExpertApp","categories","Math","floor","random","ReactDOM","render","document","getElementById"],"mappings":"mMAsCeA,EAlCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAClB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OACI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAECJ,EAAMK,OAAOC,OAAS,IACrBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAeO,OACjCN,EAAS,MAGZD,GAASQ,MAAM,2BAKhB,SACI,uBACIC,SAnBS,SAACN,GAClBF,EAASE,EAAEO,OAAOV,QAmBVW,KAAK,OACLX,MAAOA,O,+BC5BTY,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACdC,EADc,2FAC2EC,UAAUH,GADrF,sBAEFI,MAAMF,GAFJ,cAEdG,EAFc,gBAGDA,EAAIC,OAHH,cAGdC,EAHc,OAKdC,EAAOD,EAAKA,KAAKE,KAAI,SAAAC,GACvB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATrB,kBAabM,GAba,2CAAH,sDCERO,EAAc,SAAC,GAAsB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAErC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCcDO,EAjBC,SAAC,GAAiB,IAAfnB,EAAc,EAAdA,SACf,ECFwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WAEFxB,EAAQC,GACPwB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACnBf,KAAMkB,EACNL,SAAS,SAEnB,CAACpB,IAEIqB,EDd2BK,CAAa1B,GAAjCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAEtB,OAEI,gCACI,6BAAKpB,IACJoB,GAAW,2CAChB,qBAAKJ,UAAU,YAAf,SACSH,EAAOJ,KAAI,SAAAC,GAAG,OACX,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEQ3BgB,G,MAhBO,WAClB,MAAoCzC,mBAAS,CAAC,KAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEA,OACI,qCACI,+CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAE3B2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAA+CA,SAAUA,GAA3C6B,KAAKC,MAAsB,IAAhBD,KAAKE,mBCZ/CC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.42b73081.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst AddCategory = ({setCategories}) => {\n    const [value, setValue] = useState('')\n\n    const handleChange = (e) => {\n        setValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if(value.trim().length > 0) {\n            setCategories(cats => [value, ...cats ]) // callback function to get access to the component where is copying the arr\n            setValue('')\n        }\n\n        !value && alert('Please type something!')\n\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                onChange={handleChange}\n                type=\"text\"\n                value={value}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n","export const  getGifs = async (category) => {\n    const url =`https://api.giphy.com/v1/gifs/search?api_key=31Pn49ZazOvSXIHPXhaxxztBmmMAQBh3&q=$${encodeURI(category)}&limit=10`\n    const res = await fetch(url)\n    const data = await res.json()\n\n    const gifs = data.data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ( {id, title, url}) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem'\n\nconst GifGrid = ({ category}) => {\n    const { data: images, loading } = useFetchGifs(category);\n    \n    return (\n\n        <div>\n            <h3>{category}</h3>\n            {loading && <p>Loading...</p>}\n        <div className='card-grid'>\n                {images.map(img => (\n                    <GifGridItem key={img.id} {...img}/>\n                ))}\n        </div>\n        </div>\n    )\n}\n\nexport default GifGrid\n","import { useEffect, useState } from 'react'\nimport {getGifs} from '../helpers/getGifs'\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect(() => {\n\n            getGifs(category)\n            .then(imgs => setState({\n                data: imgs,\n                loading: false\n            }))\n    },[category])\n\n    return state;\n\n\n}","import React, { useState } from 'react'\nimport AddCategory from './components/AddCategory'\nimport GifGrid from './components/GifGrid'\n\nimport './index.css'\n\nconst GiftExpertApp = () => {\n    const [categories, setCategories] = useState([''])\n\n    return (\n        <>\n            <h2>GiftExpertApp</h2>\n            <hr/>\n            <AddCategory setCategories={setCategories}/>\n\n            {categories.map(category =>\n                 <GifGrid key={Math.floor(Math.random() * 100)} category={category} />\n            )}\n        </>\n    )\n}\n\nexport default GiftExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GiftExpertApp';\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}